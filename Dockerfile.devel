# ---- Build ----
FROM nvcr.io/nvidia/cuda:12.1.0-devel-ubuntu22.04 as build

ARG UID=1000
ARG GID=1000

LABEL maintainer="mi@vectorch.com"

# install build tools
RUN apt-get update -q -y && \
    apt-get install -q -y \
    build-essential \
    ninja-build \
    cmake \
    ccache \
    python3-dev \
    python3-pip \
    zip \
    pkg-config \
    libssl-dev \
    libboost-all-dev \
    curl \
    git \
    wget

# install jemalloc (optional)
RUN cd /tmp && \
    wget -nc --no-check-certificate https://github.com/jemalloc/jemalloc/releases/download/5.3.0/jemalloc-5.3.0.tar.bz2 && \
    tar -xvf jemalloc-5.3.0.tar.bz2 && \
    (cd jemalloc-5.3.0 && \
        ./configure --enable-prof --disable-initial-exec-tls && \
        make -j$(nproc) && make install && \
        ldconfig)

# install nsys
ADD https://developer.nvidia.com/downloads/assets/tools/secure/nsight-systems/2024_2/nsight-systems-2024.2.1_2024.2.1.106-1_amd64.deb .
RUN apt-get install -y ./nsight-systems-2024.2.1_2024.2.1.106-1_amd64.deb

# install rust
ENV RUSTUP_HOME=/usr/local/rustup
ENV CARGO_HOME=/usr/local/cargo
ENV PATH=/usr/local/cargo/bin:$PATH
RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
# change owner so that non-root user can install rust packages
RUN chown -R $UID:$GID /usr/local/rustup
RUN chown -R $UID:$GID /usr/local/cargo

# Install miniconda
RUN wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/Miniconda3-latest-Linux-x86_64.sh
RUN cd /tmp && \
    chmod +x Miniconda3-latest-Linux-x86_64.sh && \
    bash ./Miniconda3-latest-Linux-x86_64.sh -b -u

# Test activate miniconda
RUN . ${HOME}/miniconda3/etc/profile.d/conda.sh && \
    conda activate base && \
    conda init

RUN echo "\
. \${HOME}/miniconda3/etc/profile.d/conda.sh\n\
conda activate base\n" >> ${HOME}/.bashrc

CMD ["/bin/bash"]


